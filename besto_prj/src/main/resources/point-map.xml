<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="userNameSpace">
<!-- <mapper namespace="com.biz.mapper.MemberMap">

 -->

<resultMap id="memberMap" type="com.biz.member.MemberVO">

		<id 	property="userSeq" 		column="user_seq" />
		<result property="userId" 		column="user_id" />
		<result property="userPw" 		column="user_pw" />
		<result property="userName" 	column="user_name" />
		<result property="userEmail" 	column="user_email" />
		<result property="userGubun" 	column="user_gubun" />
		<result property="regdate" 		column="regdate" />
		<result property="userDel" 		column="user_del" />
		<result property="ppath" 		column="ppath" />
		<result property="pname" 		column="pname" />
		<result property="sysname" 		column="sysname" />
		<result property="joinPath" 	column="join_path" />
	</resultMap>
	
	
 	
 	
 	
 	
 <!-- 	멤버 로그인
 	<select id="login" parameterType="com.biz.member.MemberVO" resultMap="memberMap">
 		select user_seq, user_name, user_gubun, user_id, sysname
 		from member
 		where user_id=#{userId} and user_pw=#{userPw}
 								and USER_DEL='n'
 	</select>
	
	
	<insert id="logwrite">
		insert into log values('loglogvisit')
	</insert>
	
	
	멤버 회원가입
	<insert id="memberRegister" parameterType="com.biz.member.MemberVO">
		insert into member(user_seq, user_id, user_name, user_pw, user_email, user_gubun, regdate, user_del, ppath, pname, sysname, join_path)
		values(users_seq.nextval, #{userId}, #{userName}, #{userPw}, #{userEmail}, 'u', sysdate, 'n', #{ppath}, #{pname}, #{sysname}, #{joinPath})
	</insert>
	
	
	
	멤버 리스트(유저만)
	<select id="memberList" parameterType="com.biz.member.MemberVO" resultMap="memberMap">
 		select * 
 		from member
 	  <where>
 		<if test="searchGubun != null"> 
 			${searchGubun}=#{searchStr}
 		</if>
 	  </where>
 		order by user_seq
 	</select>
	
	
	
	멤버 디테일
	<select id="memberDetail" parameterType="String" resultMap="memberMap">
 		select user_id, user_name, user_email, user_gubun, ppath, pname, sysname
		from member
		where user_id=#{value} and USER_DEL='n'
 	</select>
	
	
	
	유저 탈퇴
	<update id="memberDelete" parameterType="String">
		update member
		 	   set user_gubun='0', user_del='y'
		 	   where user_id=#{value} and USER_DEL='n'
	</update>
	
	
	
유저 정보 수정	
	<update id="memberUpdate" parameterType="com.biz.member.MemberVO">
		update member
		       set user_name=#{userName}, user_pw=#{userPw}, user_email=#{userEmail}, ppath=#{ppath}, pname=#{pname}, sysname=#{sysname}
			   where user_id=#{userId} and USER_DEL='n'
	</update>
	

	<update id="changePassword" parameterType="com.biz.member.MemberVO">
		update member
		   set user_pw=#{userPw}
	     where user_email=#{userEmail} and user_id=#{userPw}
	</update> -->


	

</mapper>	

