<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.com.mapper.BoardMapper">

	<!-- <resultMap id="board_reply_1n" type="com.com.board.ReplyVO" extends="boardfree-map">
		collection : 여러건 가져갈때 사용(댓글같은거...)
		<collection property="boardReplyVOList" resultMap="boardReplyMap" > 
		</collection>
   </resultMap> -->
   
   	<resultMap id="board_reply_1n" type="com.com.board.BoardFreeVO" extends="boardfree-map">
		<collection property="rlist" resultMap="replyMap" /> 
   </resultMap>
   
   
	
	<!-- 자유게시판 -->
	<resultMap id="boardfree-map" type="com.com.board.BoardFreeVO">
		<id 	property="postSeq" 			    column="post_seq" />
		<result property="boardCode" 			column="board_code" />
		<result property="usersSeq" 			column="users_seq" />
		<result property="freeBoardTitle" 		column="free_board_title" />
		<result property="freeBoardContent" 	column="free_board_content" />
		<result property="freeBoardRegdate" 	column="free_board_regdate" />
		<result property="freeBoardHits" 		column="free_board_hits" />
		<result property="freeBoardDel" 		column="free_board_del" />	
		<result property="usersName" 			column="users_name" />
		<result property="flist" 				column="flist" />
	</resultMap>
	
	<!-- 댓글 -->
   <resultMap id="replyMap" type="com.com.board.ReplyVO">
      <id     property="replySeq"       	column="reply_seq" />
      <result property="replyContent"       column="reply_content" />
      <result property="usersSeq"        	column="users_seq" />
      <result property="replyRegdate"     	column="reply_regdate" />
      <result property="postSeq"     		column="post_seq" />
      <result property="boardCode"   		column="board_code" />
      <result property="replyName" 			column="reply_name" />
      
   </resultMap>
	
	<!-- 도전분석 -->
	<resultMap id="boardchallenge-map" type="com.com.board.BoardChallengeVO">
		<id 	property="postSeq" 		column="post_seq" />
		<result property="boardCode" 					column="board_code" />
		<result property="usersSeq" 					column="users_seq" />
		<result property="challengeBoardGcode" 		column="challenge_board_gcode" />
		<result property="challengeBoadrRoundseq" 	column="challenge_boadr_roundseq" />
		<result property="challengeBoardTitle" 		column="challenge_board_title" />
		<result property="challengeBoardRegdate" 		column="challenge_board_regdate" />
		<result property="challengeBoardHits" 		column="challenge_board_hits" />
		<result property="challengeBoardContent" 		column="challenge_board_content" />	
		<result property="usersName" 			column="users_name" />
		<result property="clist" 			column="clist" />
	</resultMap>
	
	<!-- 적중 -->
	<resultMap id="boardhithistory-map" type="com.com.board.BoardHitHistoryVO">
		<id 	property="postSeq" 					column="post_seq" />
		<result property="boardCode" 					column="board_code" />
		<result property="usersSeq" 					column="users_seq" />
		<result property="hithistoryDiscussionGcode" 		column="hithistory_discussion_gcode" />
		<result property="hithistoryDiscussionRoundseq" 	column="hithistory_discussion_roundseq" />
		<result property="hithistoryDiscussionTitle" 		column="hithistory_discussion_title" />
		<result property="hithistoryDiscussionRegdate" 		column="hithistory_discussion_regdate" />
		<result property="hithistoryDiscussionHits" 		column="hithistory_discussion_hits" />
		<result property="hithistoryDiscussionContent" 		column="hithistory_discussion_content" />	
		<result property="usersName" 			column="users_name" />
		<result property="hlist" 			column="hlist" />
	</resultMap>
	
	<!-- 구매내역 -->
	<resultMap id="boardbuyhistory-map" type="com.com.board.BoardBuyHistoryVO">
		<id 	property="postSeq" 		column="post_seq" />
		<result property="boardCode" 					column="board_code" />
		<result property="usersSeq" 					column="users_seq" />
		<result property="buyhistoryDiscussionGcode" 		column="buyhistory_discussion_gcode" />
		<result property="buyhistoryDiscussionRoundseq" 	column="buyhistory_discussion_roundseq" />
		<result property="buyhistoryDiscussionTitle" 		column="buyhistory_discussion_title" />
		<result property="buyhistoryDiscussionRegdate" 		column="buyhistory_discussion_regdate" />
		<result property="buyhistoryDiscussionHits" 		column="buyhistory_discussion_hits" />
		<result property="buyhistoryDiscussionContent" 		column="buyhistory_discussion_content" />	
		<result property="usersName" 			column="users_name" />
		<result property="hlist" 			column="hlist" />
	</resultMap>
	
	<!-- 공지사항 -->
	<resultMap id="notice-map" type="com.com.board.NoticeVO">
		<id 	property="noticeSeq" 		column="notice_seq" />
		<result property="noticeTitle" 		column="notice_title" />
		<result property="noticeContent" 	column="notice_content" />
		<result property="noticeRegdate" 	column="notice_regdate" />
		<result property="noticeHits" 		column="notice_hits" />
		<result property="usersSeq" 		column="users_seq" />
	</resultMap>
	
	<!-- 자유게시판 -->
	<select id="free_board_total" resultType="integer">
		select count(*) from free_board
	</select>
 	<select id="free_board_select" parameterType="hashmap" resultType="hashmap">
 		select rownum rr, ff.* from (select rownum r ,f.* from (select f.post_seq, f.free_board_title, f.free_board_content, f.board_code, 
 				f.free_board_regdate,f.free_board_hits ,u.users_name
 		from FREE_BOARD f, USERS u
 		where f.users_seq = u.users_seq order by f.post_seq desc) f) ff where ff.r between (#{pageStart}+1) and (#{pageStart}+7)
 	</select>
 	
 	<select id="free_board_detail" parameterType="int" resultMap="board_reply_1n">
 select f.post_seq, f.free_board_title, f.free_board_content,f.users_seq, u.users_name, u2.board_code, 
f.free_board_regdate , u2.REPLY_SEQ, u2.REPLY_CONTENT, u2.users_name as reply_name, u2.REPLY_REGDATE, 
u2.POST_SEQ, u2.BOARD_CODE 
from FREE_BOARD f, USERS u, (select * from users u, reply r where u.users_seq = r.users_seq) u2 
where f.users_seq = u.users_seq and f.post_seq = u2.post_seq(+) and f.post_seq= #{value} and f.board_code = u2.board_code(+) order by u2.reply_regdate
 	</select>
 	
 	<insert id="free_board_insert" parameterType="com.com.board.BoardFreeVO">
 		insert into FREE_BOARD(post_seq, free_board_title, free_board_content, users_seq ,board_code,  FREE_BOARD_REGDATE,FREE_BOARD_HITS,FREE_BOARD_DEL)
		values(post_seq.nextval,#{freeBoardTitle},#{freeBoardContent}, #{usersSeq}, 'free',to_char(sysdate, 'mm/dd/yyyy hh24:mi'),0,'n')
 	</insert>
 	

 	
 	<!-- 자유게시판 게시물 수정 -->
	<update id="free_board_update" parameterType="com.com.board.BoardFreeVO">
		update free_board set free_board_title=#{freeBoardTitle}, free_board_content=#{freeBoardContent} where post_seq=#{postSeq}
	</update>
	
	<!-- 삭제 -->
	<update id="free_board_delete" parameterType="com.com.board.BoardFreeVO">
		update free_board set free_board_del='y' where post_seq =#{postSeq} 
	</update>
	
	<!-- 댓글등록 -->
	<insert id="free_board_reply_insert" parameterType="com.com.board.ReplyVO">
	insert into reply(reply_seq, reply_content, users_seq, reply_regdate, post_seq, board_code)
  	values(reply_seq.nextval,#{replyContent},#{usersSeq},to_char(sysdate, 'mm/dd/yyyy hh24:mi'),#{postSeq},'free')
	</insert>
	
	<!-- 댓글 삭제  -->
	
	<delete id="free_board_reply_delete"  parameterType="com.com.board.ReplyVO">
		  delete REPLY where reply_seq=#{replySeq}
	</delete>
	
	<!-- 댓글 수정 -->
	<update id="free_board_reply_update" parameterType="com.com.board.ReplyVO">
		update reply set REPLY_CONTENT= #{replyContent} where reply_seq=#{replySeq};
	</update>
	
 	
 	
<select id="free_board_reply_select_after_delete" parameterType="int" resultMap="replyMap">
select * from reply r, users u
where r.users_seq=u.users_seq and r.board_code ='free' and r.post_seq =#{postSeq}</select>

	<!-- 도전분석 -->
	<select id="challenge_board_select" resultMap="boardchallenge-map">	
		select rownum as clist, b.*    
        from (select c.post_seq, c.board_code, c.users_seq, c.challenge_board_gcode, c.challenge_boadr_roundseq, c.challenge_board_title, c.challenge_board_regdate, c.challenge_board_hits, c.challenge_board_content,u.users_name
            	from challenge_board c, USERS u
              where c.users_seq = u.users_seq and c.challenge_board_del='n'
              order by c.challenge_board_regdate
              ) b 
              order by clist desc
	</select>
	
	<select id="challenge_board_detail"  parameterType="int" resultMap="boardchallenge-map">	
		select c.post_seq, c.board_code, c.users_seq, c.challenge_board_gcode, c.challenge_boadr_roundseq, c.challenge_board_title, c.challenge_board_regdate, c.challenge_board_hits, c.challenge_board_content,u.users_name
	 	from challenge_board c,USERS u
   		where c.users_seq = u.users_seq
	 	and post_seq=#{value}
	</select>
	
	
	<insert id="challenge_board_insert" parameterType="com.com.board.BoardChallengeVO">
		insert into challenge_board(post_seq, board_code, users_seq, challenge_board_gcode, 
		challenge_boadr_roundseq, challenge_board_title, 
    	 challenge_board_regdate, challenge_board_hits, challenge_board_content)
    	 values(post_seq.nextval, 'challenge', #{usersSeq}, 'v' , 6, #{challengeBoardTitle},to_char(sysdate, 'mm/dd/yyyy hh24:mi'), 36, #{challengeBoardContent})
	</insert>
	
	<!-- 도전분석 게시물 수정 -->
	<update id="challenge_board_update" parameterType="com.com.board.BoardChallengeVO">
		update challenge_board set challenge_board_title=#{challengeBoardTitle}, challenge_board_content=#{challengeBoardContent} where post_seq=#{postSeq}
	</update>
	
	<!-- 삭제 -->
	<update id="challenge_board_delete" parameterType="com.com.board.BoardChallengeVO">
		update challenge_board set challenge_board_del='y' where post_seq = #{postSeq} 
	</update>
	
	
	
	
	<!-- 적중분석 -->
	<select id = "hit_history_board_select" resultMap="boardhithistory-map">
		select rownum as hlist, b.*
   			from( select h.POST_SEQ,h.BOARD_CODE,h.USERS_SEQ,h.HITHISTORY_DISCUSSION_GCODE,
        h.HITHISTORY_DISCUSSION_ROUNDSEQ,h.HITHISTORY_DISCUSSION_TITLE,h.HITHISTORY_DISCUSSION_REGDATE,h.HITHISTORY_DISCUSSION_DEL,
        h.HITHISTORY_DISCUSSION_HITS,h.HITHISTORY_DISCUSSION_CONTENT, u.users_name
    			  from hithistory_discussion h,users u
      				where h.users_seq = u.users_seq 
              and h.hithistory_discussion_del='n'
              order by h.hithistory_discussion_regdate) b
      			  order by hlist desc
	</select>
	
	<select id = "hit_history_board_detail" resultMap="boardhithistory-map">
		select h.POST_SEQ,h.BOARD_CODE,h.USERS_SEQ,h.HITHISTORY_DISCUSSION_GCODE,h.HITHISTORY_DISCUSSION_ROUNDSEQ,h.HITHISTORY_DISCUSSION_TITLE,h.HITHISTORY_DISCUSSION_REGDATE,h.HITHISTORY_DISCUSSION_HITS,h.HITHISTORY_DISCUSSION_CONTENT, u.users_name
		from hithistory_discussion h,users u
    	where h.users_seq = u.users_seq
    	and post_seq=#{value}
	</select>
	
	<insert id="hit_history_board_insert" parameterType="com.com.board.BoardChallengeVO">
	   insert into hithistory_discussion(POST_SEQ, BOARD_CODE, USERS_SEQ,HITHISTORY_DISCUSSION_GCODE, HITHISTORY_DISCUSSION_ROUNDSEQ, 
         HITHISTORY_DISCUSSION_TITLE, HITHISTORY_DISCUSSION_REGDATE,HITHISTORY_DISCUSSION_HITS, HITHISTORY_DISCUSSION_CONTENT)
         values(post_seq.nextval,'hit',#{usersSeq},'v',13,#{hithistoryDiscussionTitle},to_char(sysdate, 'mm/dd/yyyy hh24:mi'),30,#{hithistoryDiscussionContent})
	</insert>
	
	<!-- 게시물 수정 -->
	<update id="hit_history_board_update" parameterType="com.com.board.BoardHitHistoryVO">
		update hithistory_discussion set hithistory_discussion_title=#{hithistoryDiscussionTitle}, hithistory_discussion_content=#{hithistoryDiscussionContent} where post_seq=#{postSeq}
	</update>
	
	
	<!-- 삭제 -->
	<update id="hit_history_board_delete" parameterType="com.com.board.BoardHitHistoryVO">
		update hithistory_discussion set hithistory_discussion_del='y' where post_seq =#{postSeq} 
	</update>
	
	
	
	<!-- 구매분석  -->
	<select id = "buy_history_board_select" resultMap="boardbuyhistory-map">
		select rownum as hlist, bet.*
				from ( select b.POST_SEQ, b.BOARD_CODE, b.BUYHISTORY_DISCUSSION_GCODE, 
							   b.BUYHISTORY_DISCUSSION_ROUNDSEQ, b.BUYHISTORY_DISCUSSION_TITLE, 
							   b.BUYHISTORY_DISCUSSION_REGDATE, b.BUYHISTORY_DISCUSSION_HITS, 
							   b.USERS_SEQ, b.BUYHISTORY_DISCUSSION_CONTENT, u.users_name
				        from buyhistory_discussion b, users u
				        where b.users_seq = u.users_seq
				        and b.buyhistory_discussion_del='n'
				        order by b.BUYHISTORY_DISCUSSION_REGDATE) bet
				 order by hlist desc
 	</select>
 	
 	<select id = "buy_history_board_detail" resultMap="boardbuyhistory-map">
 		select b.POST_SEQ, b.BOARD_CODE, b.BUYHISTORY_DISCUSSION_GCODE, 
 			   b.BUYHISTORY_DISCUSSION_ROUNDSEQ, b.BUYHISTORY_DISCUSSION_TITLE, 
 			   b.BUYHISTORY_DISCUSSION_REGDATE, b.BUYHISTORY_DISCUSSION_HITS, 
 			   b.USERS_SEQ, b.BUYHISTORY_DISCUSSION_CONTENT,u.users_name
	 	from buyhistory_discussion b, users u
   		where b.users_seq = u.users_seq
    	and post_seq=#{value}
 	</select>
 	
 	<insert id="buy_history_board_insert" parameterType="com.com.board.BoardBuyHistoryVO">
 	 insert into buyhistory_discussion(POST_SEQ, BOARD_CODE, BUYHISTORY_DISCUSSION_GCODE, BUYHISTORY_DISCUSSION_ROUNDSEQ,
    BUYHISTORY_DISCUSSION_TITLE, BUYHISTORY_DISCUSSION_REGDATE, BUYHISTORY_DISCUSSION_HITS, USERS_SEQ, BUYHISTORY_DISCUSSION_CONTENT)
     values(post_seq.nextval,'buyhistory','v',44,#{buyhistoryDiscussionTitle},to_char(sysdate, 'mm/dd/yyyy hh24:mi'), 33,#{usersSeq},#{buyhistoryDiscussionContent})
     </insert>
 	
 	<!-- 게시물 수정 -->
	<update id="buy_history_board_update" parameterType="com.com.board.BoardBuyHistoryVO">
		update buyhistory_discussion set buyhistory_discussion_title=#{buyhistoryDiscussionTitle}, 
										buyhistory_discussion_content=#{buyhistoryDiscussionContent} where post_seq=#{postSeq}
	</update>
 	
 	
 	<!-- 삭제 -->
 	

    <!-- 자유게시판 삭제 -->
    <!-- <update id="free_board_update">
    	update free_board set free_board_del = 'y' where users_seq = #{usersSeq} 
    </update> -->
    
    <!-- 댓글 조회 -->
   <!-- 	<select id="free_board_comment_all" resultMap="board_reply_1n">
   		select r.reply_seq, r.reply_content, r.reply_writer, to_char(r.reply_regdate, 'yyyy-mm-dd hh24:mi')
   		from free_board f, reply r
   		where f.post_seq = r.post_seq AND f.post_seq = #{postSeq}
        order by f.post_seq desc
   	</select> -->
       
   	<!-- 댓글 입력 -->
   	<!-- <insert id="free_board_comment_input" parameterType="com.com.board.ReplyVO">
   		insert into reply 
   		values (reply_seq.nextval, #{replyContent}, #{replyWriter}, sysdate, #{postSeq}, #{boardCode})
   	</insert>
   	
   	댓글 삭제
   	<delete id="free_board_comment_del">
		delete *
		from reply
		where reply_seq = #{replySeq} AND board_code = #{boardCode}
   	</delete>
   	
   	댓글 수정
   	<update id="free_board_comment_update">
   		update reply set reply_content = #{replyContent}, reply_regdate = sysdate 
   		where reply_seq = #{replySeq} AND post_seq = #{postSeq} AND board_code = #{boardCode}
   	</update> -->
   	
   	<!-- 공지사항 뽑기~ -->
   	<select id="notice_all" resultMap="notice-map">
   		select *
        from notice
        order by notice_seq desc
   	</select>
   	
   	<select id="notice_detail" parameterType="int" resultMap="notice-map">
   		select *
   		from notice
   		where notice_seq = #{value}
   	</select>
   	

   	<!-- 공지사항 hit수 올리기 -->
	<update id="notice_count" parameterType="integer">
   		update notice set notice_hits = notice_hits +1 where notice_seq = #{value}
   	</update>
   	
   	<!-- 공지사항 입력 -->
   	<insert id="notice_insert" parameterType="com.com.board.NoticeVO">
   		insert into notice
   		values(notice_seq.nextval, #{noticeTitle}, #{noticeContent}, sysdate, 0, 5)
   	</insert>	
   	
   	<!-- 공지사항 수정 -->
   	<update id="notice_update" parameterType="com.com.board.NoticeVO">
   		update notice set notice_title = #{noticeTitle}, notice_content = #{noticeContent}, notice_regdate = sysdate
   		where notice_seq = #{noticeSeq}   	
   	</update>
   	
   	<!-- 공지사항 삭제 -->
   	<delete id="notice_delete" parameterType="integer">
   		delete from notice
   		where notice_seq = #{noticeSeq}
   	</delete>
   	
   	<!-- 공지사항 검색 -->
   	<select id="notice_search" parameterType="String" resultMap="notice-map">
   		select * 
   		from notice 
   		where notice_title like '%'||#{value}||'%'
   	</select>


</mapper>

